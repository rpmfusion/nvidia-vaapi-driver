From 65c60f9882ab8d9f49d52db17aad2c3609612003 Mon Sep 17 00:00:00 2001
From: Nicolas Chauvet <kwizart@gmail.com>
Date: Sun, 12 Mar 2023 20:46:52 +0100
Subject: [PATCH] Fix build on i686 using a cast

Signed-off-by: Nicolas Chauvet <kwizart@gmail.com>
---
 src/direct/nv-driver.c | 14 +++++++-------
 src/vabackend.c        |  4 ++--
 2 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/direct/nv-driver.c b/src/direct/nv-driver.c
index fec87ae11b12..a4a76f57b7f3 100644
--- a/src/direct/nv-driver.c
+++ b/src/direct/nv-driver.c
@@ -23,8 +23,8 @@ static bool nv_alloc_object(int fd, NvHandle hRoot, NvHandle hObjectParent, NvHa
         .hObjectParent = hObjectParent,
         .hObjectNew = *hObjectNew,
         .hClass = hClass,
-        .pRightsRequested = NULL,
-        .pAllocParms = params
+        .pRightsRequested = (NvP64)NULL,
+        .pAllocParms = (NvP64)params
     };
 
     int ret = ioctl(fd, _IOC(_IOC_READ|_IOC_WRITE, NV_IOCTL_MAGIC, NV_ESC_RM_ALLOC, sizeof(NVOS64_PARAMETERS)), &alloc);
@@ -66,7 +66,7 @@ static bool nv_rm_control(int fd, NvHandle hClient, NvHandle hObject, NvV32 cmd,
         .hObject = hObject,
         .cmd = cmd,
         .flags = flags,
-        .params = params,
+        .params = (NvP64)params,
         .paramsSize = paramSize
     };
 
@@ -158,9 +158,9 @@ static bool nv_get_versions(int fd, NvHandle hClient, char **driverVersion) {
     char titleBuffer[64];
     NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS params = {
         .sizeOfStrings = 64,
-        .pDriverVersionBuffer = driverVersionBuffer,
-        .pVersionBuffer = versionBuffer,
-        .pTitleBuffer = titleBuffer
+        .pDriverVersionBuffer = (NvP64)driverVersionBuffer,
+        .pVersionBuffer = (NvP64)versionBuffer,
+        .pTitleBuffer = (NvP64)titleBuffer
     };
     bool ret = nv_rm_control(fd, hClient, hClient, NV0000_CTRL_CMD_SYSTEM_GET_BUILD_VERSION, 0, sizeof(params), &params);
     if (!ret) {
@@ -278,7 +278,7 @@ bool init_nvdriver(NVDriverContext *context, int drmFd) {
         goto err;
     }
 
-    char *ver;
+    char *ver = NULL;
     nv_get_versions(nvctlFd, context->clientObject, &ver);
     LOG("NVIDIA kernel driver version: %s", ver);
     context->driverMajorVersion = atoi(ver);
diff --git a/src/vabackend.c b/src/vabackend.c
index fe838f99a046..e91bb8b4644b 100644
--- a/src/vabackend.c
+++ b/src/vabackend.c
@@ -415,7 +415,7 @@ static void* resolveSurfaces(void *param) {
         if (CHECK_CUDA_RESULT(cv->cuvidMapVideoFrame(ctx->decoder, surface->pictureIdx, &deviceMemory, &pitch, &procParams))) {
             continue;
         }
-        LOG("Mapped surface %d to %llX (%d)", surface->pictureIdx, deviceMemory, pitch);
+        LOG("Mapped surface %d to %llX (%d)", surface->pictureIdx, (unsigned long long) deviceMemory, pitch);
 
         //update cuarray
         drv->backend->exportCudaPtr(drv, deviceMemory, surface, pitch);
@@ -2062,7 +2062,7 @@ static VAStatus nvExportSurfaceHandle(
 
     drv->backend->fillExportDescriptor(drv, surface, ptr);
 
-    LOG("Exporting with %d %d %d %d %lx %d %d %lx", ptr->width, ptr->height, ptr->layers[0].offset[0], ptr->layers[0].pitch[0], ptr->objects[0].drm_format_modifier, ptr->layers[1].offset[0], ptr->layers[1].pitch[0], ptr->objects[1].drm_format_modifier);
+    LOG("Exporting with %d %d %d %d %llx %d %d %llx", ptr->width, ptr->height, ptr->layers[0].offset[0], ptr->layers[0].pitch[0], (unsigned long long) ptr->objects[0].drm_format_modifier, ptr->layers[1].offset[0], ptr->layers[1].pitch[0], (unsigned long long) ptr->objects[1].drm_format_modifier);
 
     CHECK_CUDA_RESULT_RETURN(cu->cuCtxPopCurrent(NULL), VA_STATUS_ERROR_OPERATION_FAILED);
 
-- 
2.39.2

